{
  "name": "Sacada Evolution",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "file-id",
              "name": "file_id",
              "value": "1X5OdVwfmCJxSXiabf30HHMGZadOrol9leMEKAQuVqHM",
              "type": "string"
            },
            {
              "id": "group-id",
              "name": "group_jid",
              "value": "120363418260249154@g.us",
              "type": "string"
            },
            {
              "id": "instance",
              "name": "instance_name",
              "value": "aiagentautomate",
              "type": "string"
            },
            {
              "id": "start-date",
              "name": "start_date",
              "value": "2025-06-16",
              "type": "string"
            },
            {
              "id": "supabase-table",
              "name": "counter_table",
              "value": "daily_message_counter",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "ee00dfcd-4b39-4f1c-bc56-706a275b282c",
      "name": "Configura√ß√µes",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -800,
        100
      ]
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "daily_message_counter"
      },
      "id": "f4f40d4a-7aff-4799-94b4-72898e70dac7",
      "name": "Buscar Contador Atual",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -600,
        100
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const counterData = $input.all()[0];\nlet currentDay = 1;\nlet isFirstRun = false;\n\nif (counterData.json && counterData.json.length > 0) {\n  currentDay = counterData.json[0].current_day + 1;\n} else {\n  isFirstRun = true;\n  currentDay = 1;\n}\n\n// Pega data de in√≠cio com seguran√ßa\nconst config = $input.all().find(item => item.json.start_date);\nconst startDate = config ? new Date(config.json.start_date) : new Date(\"2025-06-17\");\n\nconst hoje = new Date();\nconst diasDecorridos = Math.floor((hoje - startDate) / (1000 * 60 * 60 * 24)) + 1;\n\nreturn [{\n  json: {\n    current_day: currentDay,\n    dias_decorridos: diasDecorridos,\n    is_first_run: isFirstRun,\n    execution_date: hoje.toISOString(),\n    whatsapp_id: \"whatsapp_daily_schedule\",\n  }\n}];\n"
      },
      "id": "6c0b0896-ec98-4acf-b4fd-5dcfa372f96a",
      "name": "Calcular Dia Atual",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -400,
        100
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 1
          },
          "conditions": [
            {
              "id": "first-run-condition",
              "leftValue": "={{ $json.is_first_run }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equal"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "ecb7faf3-baa4-4500-aebe-d7360ba4ad98",
      "name": "√â Primeira Execu√ß√£o?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -200,
        100
      ]
    },
    {
      "parameters": {
        "tableId": "daily_message_counter"
      },
      "id": "bed57bac-8cae-4ed2-a24d-3d84a3a564eb",
      "name": "Criar Contador Inicial",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "daily_message_counter",
        "filters": {
          "conditions": [
            {
              "keyName": "current_day",
              "condition": "eq",
              "keyValue": "={{ $json.current_day }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "last_execution",
              "fieldValue": "={{ $json.execution_date }}"
            }
          ]
        }
      },
      "id": "e810d82b-d101-485c-b416-521026db9279",
      "name": "Atualizar Contador",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        200
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "value": "={{ $('Configura√ß√µes').item.json.file_id }}",
          "mode": "id"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "text/plain"
            }
          }
        }
      },
      "id": "0f8ffec4-fe17-4d0a-8dcd-b1d433ea2610",
      "name": "Buscar Mensagens Google Drive",
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        200,
        100
      ],
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "AMnU78157s5pFXnN",
          "name": "Google AiAgent"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "try {\n  // Buscar o dia atual da execu√ß√£o anterior\n  const dayData = $('Calcular Dia Atual').item.json;\n  const currentDay = dayData.current_day;\n  \n  // Processar o conte√∫do do Google Docs\n  const binaryData = $input.all()[0].binary.data.data;\n  \n  if (!binaryData) {\n    throw new Error(\"Arquivo n√£o encontrado no Google Drive\");\n  }\n  \n  const fileContent = Buffer.from(binaryData, 'base64').toString('utf-8');\n  \n  // Regex melhorada para extrair mensagens do formato \"Dia X ‚Äî\"\n  const dayPattern = /Dia\\s*(\\d+)\\s*‚Äî([\\s\\S]*?)(?=\\nDia\\s*\\d+\\s*‚Äî|$)/gi;\n  const messages = {};\n  let match;\n  \n  while ((match = dayPattern.exec(fileContent)) !== null) {\n    const dayNumber = parseInt(match[1]);\n    const messageContent = match[2].trim();\n    if (messageContent) {\n      messages[dayNumber] = messageContent;\n    }\n  }\n  \n  const totalMessages = Object.keys(messages).length;\n  \n  if (totalMessages === 0) {\n    throw new Error(\"Nenhuma mensagem encontrada no formato 'Dia X ‚Äî'\");\n  }\n  \n  // Buscar a mensagem do dia atual ou fazer wrap-around\n  let targetDay = currentDay;\n  if (!messages[targetDay]) {\n    // Se n√£o existir o dia espec√≠fico, usar m√≥dulo para wrap-around\n    targetDay = ((currentDay - 1) % totalMessages) + 1;\n    \n    // Se ainda n√£o existir, pegar a primeira mensagem dispon√≠vel\n    if (!messages[targetDay]) {\n      targetDay = Math.min(...Object.keys(messages).map(Number));\n    }\n  }\n  \n  const selectedMessage = messages[targetDay];\n  \n  // Formata√ß√£o da mensagem final\n  const formattedMessage = `üìò *Mensagem do Dia ${targetDay}*\\n\\n${selectedMessage}\\n\\n_Enviado automaticamente √†s 9h_ ‚è∞`;\n  \n  return [{\n    json: {\n      success: true,\n      current_day: currentDay,\n      target_day: targetDay,\n      original_message: selectedMessage,\n      formatted_message: formattedMessage,\n      total_messages_available: totalMessages,\n      execution_timestamp: new Date().toISOString()\n    }\n  }];\n  \n} catch (error) {\n  // Mensagem de fallback em caso de erro\n  const fallbackMessage = `ü§ñ *Mensagem Autom√°tica*\\n\\nüìÖ Data: ${new Date().toLocaleDateString('pt-BR')}\\nüïò Hor√°rio: ${new Date().toLocaleTimeString('pt-BR')}\\n\\n‚úÖ Sistema funcionando normalmente.\\n\\n‚ö†Ô∏è Erro t√©cnico: ${error.message}`;\n  \n  return [{\n    json: {\n      success: false,\n      error: error.message,\n      formatted_message: fallbackMessage,\n      current_day: $('Calcular Dia Atual').item.json.current_day,\n      execution_timestamp: new Date().toISOString()\n    }\n  }];\n}"
      },
      "id": "bf4b13da-5f10-481d-9241-bf6beb65b0c6",
      "name": "Processar Mensagem do Dia",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        400,
        100
      ]
    },
    {
      "parameters": {
        "resource": "messages-api",
        "instanceName": "={{ $('Configura√ß√µes').item.json.instance_name }}",
        "remoteJid": "={{ $('Configura√ß√µes').item.json.group_jid }}",
        "messageText": "={{ $json.formatted_message }}",
        "options_message": {}
      },
      "id": "dd58b95a-707a-432d-94cc-5dcc75be5394",
      "name": "Enviar WhatsApp",
      "type": "n8n-nodes-evolution-api.evolutionApi",
      "typeVersion": 1,
      "position": [
        600,
        100
      ],
      "credentials": {
        "evolutionApi": {
          "id": "vBZUmfwmCqpNUkEJ",
          "name": "Evolution account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "daily_message_counter"
      },
      "id": "54c87445-7e96-483f-a52c-e126a56f4182",
      "name": "Log Detalhado",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        800,
        100
      ],
      "credentials": {
        "supabaseApi": {
          "id": "M658CwP1x5QAYDSu",
          "name": "Supabase teste"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "rafadsouz@gmail.com",
        "subject": "‚úÖ WhatsApp Enviado - Dia {{ $('Processar Mensagem do Dia').item.json.current_day }} | {{ $now.format('dd/MM/yyyy') }}",
        "message": "=<h2>üì± Relat√≥rio de Envio Autom√°tico</h2>\n\n<table border=\"1\" cellpadding=\"8\" cellspacing=\"0\" style=\"border-collapse: collapse; font-family: Arial, sans-serif;\">\n  <tr style=\"background-color: #f0f0f0;\">\n    <td><strong>üïò Data/Hora</strong></td>\n    <td>{{ $now.format('dd/MM/yyyy HH:mm:ss') }}</td>\n  </tr>\n  <tr>\n    <td><strong>üìã Inst√¢ncia</strong></td>\n    <td>{{ $('Configura√ß√µes').item.json.instance_name }}</td>\n  </tr>\n  <tr style=\"background-color: #f9f9f9;\">\n    <td><strong>üë• Grupo</strong></td>\n    <td>{{ $('Configura√ß√µes').item.json.group_jid }}</td>\n  </tr>\n  <tr>\n    <td><strong>üìÖ Dia Atual</strong></td>\n    <td>{{ $('Processar Mensagem do Dia').item.json.current_day }}</td>\n  </tr>\n  <tr style=\"background-color: #f9f9f9;\">\n    <td><strong>üìä Total Mensagens</strong></td>\n    <td>{{ $('Processar Mensagem do Dia').item.json.total_messages_available }}</td>\n  </tr>\n  <tr>\n    <td><strong>‚úÖ Status</strong></td>\n    <td style=\"color: green;\">Enviado com Sucesso</td>\n  </tr>\n</table>\n\n<h3>üìÑ Mensagem Enviada:</h3>\n<div style=\"background-color: #e8f5e8; padding: 15px; border-left: 4px solid #4caf50; margin: 10px 0;\">\n  <pre>{{ $('Processar Mensagem do Dia').item.json.original_message }}</pre>\n</div>\n\n<hr>\n<p style=\"font-size: 12px; color: #666;\"><em>Enviado automaticamente pelo sistema N8N</em></p>",
        "options": {
          "appendAttribution": false,
          "senderName": "Sistema N8N - WhatsApp Scheduler"
        }
      },
      "id": "1ce3b574-78ac-426c-933b-f4c0ea19906e",
      "name": "Notifica√ß√£o Detalhada",
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1000,
        100
      ],
      "webhookId": "2dd70fc7-dff0-49aa-8589-66e2c31cd344",
      "credentials": {
        "gmailOAuth2": {
          "id": "bMTj7PQt4FxoCvuP",
          "name": "Gmail account AiAgentAutomate"
        }
      }
    },
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "hour": 3,
              "minute": 30
            }
          ]
        }
      },
      "id": "1f6c6798-cd63-40a4-8864-52742c952424",
      "name": "CRON Trigger 8h",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -1000,
        100
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Configura√ß√µes": {
      "main": [
        [
          {
            "node": "Buscar Contador Atual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Contador Atual": {
      "main": [
        [
          {
            "node": "Calcular Dia Atual",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calcular Dia Atual": {
      "main": [
        [
          {
            "node": "√â Primeira Execu√ß√£o?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "√â Primeira Execu√ß√£o?": {
      "main": [
        [
          {
            "node": "Criar Contador Inicial",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Atualizar Contador",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Criar Contador Inicial": {
      "main": [
        [
          {
            "node": "Buscar Mensagens Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Atualizar Contador": {
      "main": [
        [
          {
            "node": "Buscar Mensagens Google Drive",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Mensagens Google Drive": {
      "main": [
        [
          {
            "node": "Processar Mensagem do Dia",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Processar Mensagem do Dia": {
      "main": [
        [
          {
            "node": "Enviar WhatsApp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar WhatsApp": {
      "main": [
        [
          {
            "node": "Log Detalhado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Detalhado": {
      "main": [
        [
          {
            "node": "Notifica√ß√£o Detalhada",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CRON Trigger 8h": {
      "main": [
        [
          {
            "node": "Configura√ß√µes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1c319cf7-33f4-4dd5-9ddf-bbe3aafd01f5",
  "meta": {
    "instanceId": "07da5975239dfa1c885ebc7e3de37678b54f1a2046d3af021aa5a96fcc99d36f"
  },
  "id": "S1E9mGFi7DGKjQ2j",
  "tags": []
}
